name: 'Attempt build'
description: 'Attempts to build lots of different languages.'
inputs:
  default-ruby-version:
    description: 'The ruby version to use if there is no .ruby-version file'
    required: false
    default: 2.6.5
  default-node-version:
    description: 'The node version to use if there is no .nvmrc file'
    required: false
    default: 14.15.0
runs:
  using: "composite"
  steps:
    - name: Set ruby version
      run: echo "RUBY_VERSION=$(cat .ruby-version || echo ${{ inputs.default-ruby-version }})"  >> $GITHUB_ENV
      shell: bash
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
    - name: Cache ruby dependencies
      id: cache-ruby-dependencies
      uses: actions/cache@v2
      with:
        path: ~/bundler_cache
        key: ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-
    - name: Attempt bundle install if cache miss
      run: |
        bundle install --jobs 4 --retry 3 --path ~/bundler_cache || exit 0
      if: steps.cache-ruby-dependencies.outputs.cache-hit != 'true'
      shell: bash

    - name: Set node version
      run: echo "NODE_VERSION=$(cat .nvmrc || echo ${{ inputs.default-node-version }})"  >> $GITHUB_ENV
      shell: bash
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Get Yarn cache path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      shell: bash
    - name: Cache Yarn cache and node_modules
      id: cache-yarn-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-
    - name: Attempt yarn install
      run: yarn install --frozen-lockfile || exit 0
      if: steps.cache-yarn-dependencies.outputs.cache-hit != 'true'
      shell: bash